local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=2 -1 ;local v30;v27=v12(v11(v27,5),v7("\113\127","\217\95\81\124\55"),function(v42) if (v9(v42,2)==(226 -147)) then local v94=0;while true do if (0==v94) then v30=v8(v11(v42,1 -0 ,2 -1 ));return "";end end else local v95=v10(v8(v42,39 -23 ));if v30 then local v101=0;local v102;while true do if (v101==1) then return v102;end if (v101==0) then v102=v13(v95,v30);v30=nil;v101=1;end end else return v95;end end end);local function v31(v43,v44,v45) if v45 then local v96=(v43/(2^(v44-1)))%((621 -(555 + 64))^(((v45-1) -(v44-1)) + 1 + 0)) ;return v96-(v96%(1 + 0)) ;else local v97=2^(v44-1) ;return (((v43%(v97 + v97))>=v97) and 1) or 0 ;end end local function v32() local v46=0;local v47;while true do if (0==v46) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==1) then return (v50 * 256) + v49 ;end if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==1) then return (v55 * (16778101 -(261 + 624))) + (v54 * 65536) + (v53 * (454 -198)) + v52 ;end if (0==v51) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v51=1;end end end local function v35() local v56=v34();local v57=v34();local v58=1081 -(1020 + 60) ;local v59=(v31(v57,932 -(857 + 74) ,1443 -(630 + 793) ) * (2^32)) + v56 ;local v60=v31(v57,71 -50 ,31);local v61=((v31(v57,32)==1) and  -(569 -(367 + 201))) or 1 ;if (v60==0) then if (v59==0) then return v61 * 0 ;else local v103=0;while true do if (v103==0) then v60=1;v58=0 -0 ;break;end end end elseif (v60==2047) then return ((v59==0) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end local function v36(v62) local v63;if  not v62 then v62=v34();if (v62==0) then return "";end end v63=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;local v64={};for v78=1, #v63 do v64[v78]=v10(v9(v11(v63,v78,v78)));end return v14(v64);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65=0;local v66;local v67;local v68;local v69;local v70;local v71;while true do if (v65==0) then v66={};v67={};v68={};v69={v66,v67,nil,v68};v65=1;end if (v65==1) then v70=v34();v71={};for v104=1,v70 do local v105=0;local v106;local v107;while true do if (v105==1) then if (v106==1) then v107=v32()~=0 ;elseif (v106==2) then v107=v35();elseif (v106==3) then v107=v36();end v71[v104]=v107;break;end if (0==v105) then v106=v32();v107=nil;v105=1;end end end v69[3]=v32();v65=2;end if (2==v65) then for v108=1,v34() do local v109=0;local v110;while true do if (v109==0) then v110=v32();if (v31(v110,1,1)==0) then local v120=0;local v121;local v122;local v123;while true do if (v120==3) then if (v31(v122,2 + 1 ,3)==1) then v123[4]=v71[v123[10 -6 ]];end v66[v108]=v123;break;end if (v120==2) then if (v31(v122,1,1)==1) then v123[768 -(745 + 21) ]=v71[v123[2]];end if (v31(v122,2,2)==1) then v123[3]=v71[v123[3]];end v120=3;end if (0==v120) then v121=v31(v110,2,3);v122=v31(v110,931 -(214 + 713) ,2 + 4 );v120=1;end if (v120==1) then v123={v33(),v33(),nil,nil};if (v121==(0 + 0)) then v123[3]=v33();v123[4]=v33();elseif (v121==(3 -2)) then v123[3]=v34();elseif (v121==2) then v123[3]=v34() -(2^16) ;elseif (v121==3) then v123[1750 -(760 + 987) ]=v34() -(2^16) ;v123[1917 -(1789 + 124) ]=v33();end v120=2;end end end break;end end end for v111=1,v34() do v67[v111-1 ]=v39();end return v69;end end end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...) local v80=v75;local v81=v76;local v82=v77;local v83=v38;local v84=1;local v85= -1;local v86={};local v87={...};local v88=v20("#",...) -1 ;local v89={};local v90={};for v98=0 + 0 ,v88 do if (v98>=v82) then v86[v98-v82 ]=v87[v98 + (878 -(282 + 595)) ];else v90[v98]=v87[v98 + 1 ];end end local v91=(v88-v82) + (3 -2) ;local v92;local v93;while true do local v99=0;while true do if (v99==0) then v92=v80[v84];v93=v92[1638 -(1523 + 114) ];v99=1;end if (v99==1) then if (v93<=55) then if (v93<=(22 + 5)) then if (v93<=13) then if (v93<=(6 + 0)) then if (v93<=2) then if (v93<=0) then local v134=v92[2];local v135=v90[v134];local v136=v92[3];for v164=1,v136 do v135[v164]=v90[v134 + v164 ];end elseif (v93==1) then local v171=v92[1057 -(87 + 968) ];local v172=v92[4];local v173=v171 + 2 ;local v174={v90[v171](v90[v171 + 1 ],v90[v173])};for v354=1,v172 do v90[v173 + v354 ]=v174[v354];end local v175=v174[1];if v175 then local v391=0;while true do if (v391==0) then v90[v173]=v175;v84=v92[3];break;end end else v84=v84 + (1 -0) ;end else local v176=v90[v92[4]];if  not v176 then v84=v84 + 1 ;else local v392=0;while true do if (v392==0) then v90[v92[8 -6 ]]=v176;v84=v92[1068 -(68 + 997) ];break;end end end end elseif (v93<=4) then if (v93>3) then v90[v92[2]]=v90[v92[3]] + v90[v92[4]] ;else local v178=0;local v179;local v180;while true do if (v178==0) then v179=v92[2];v180=v90[v179];v178=1;end if (v178==1) then for v452=v179 + 1 ,v92[3] do v15(v180,v90[v452]);end break;end end end elseif (v93>5) then v90[v92[2]]=v92[3] + v90[v92[4]] ;else v90[v92[2]]=v90[v92[3]] -v90[v92[8 -4 ]] ;end elseif (v93<=9) then if (v93<=7) then v90[v92[2]]={};elseif (v93==8) then v90[v92[1415 -(447 + 966) ]]=v90[v92[3]] + v90[v92[1274 -(226 + 1044) ]] ;else local v184=v92[2];local v185=v90[v184];local v186=v90[v184 + 2 ];if (v186>0) then if (v185>v90[v184 + (2 -1) ]) then v84=v92[3];else v90[v184 + 3 ]=v185;end elseif (v185<v90[v184 + 1 ]) then v84=v92[3];else v90[v184 + 3 ]=v185;end end elseif (v93<=11) then if (v93>10) then local v187=v92[2];v90[v187]=v90[v187](v21(v90,v187 + 1 ,v85));else local v189=0;local v190;local v191;local v192;local v193;while true do if (v189==1) then v192=v92[4];v193=0;v189=2;end if (v189==0) then v190=v92[2];v191={v90[v190]()};v189=1;end if (v189==2) then for v457=v190,v192 do local v458=0;while true do if (v458==0) then v193=v193 + (4 -3) ;v90[v457]=v191[v193];break;end end end break;end end end elseif (v93==(129 -(32 + 85))) then local v194=0;local v195;local v196;while true do if (1==v194) then for v459=1, #v89 do local v460=v89[v459];for v514=0, #v460 do local v515=v460[v514];local v516=v515[1];local v517=v515[2];if ((v516==v90) and (v517>=v195)) then local v526=0;while true do if (v526==0) then v196[v517]=v516[v517];v515[702 -(376 + 325) ]=v196;break;end end end end end break;end if (0==v194) then v195=v92[2 + 0 ];v196={};v194=1;end end else local v197=v92[2];local v198=v90[v92[3]];v90[v197 + 1 ]=v198;v90[v197]=v198[v92[5 -1 ]];end elseif (v93<=20) then if (v93<=16) then if (v93<=14) then v90[v92[2]]=v90[v92[3]];elseif (v93>15) then for v357=v92[2],v92[3] do v90[v357]=nil;end else v90[v92[5 -3 ]]=v90[v92[3]] -v90[v92[1 + 3 ]] ;end elseif (v93<=18) then if (v93==17) then local v203=0;local v204;local v205;local v206;while true do if (v203==0) then v204=v92[959 -(892 + 65) ];v205=v90[v204];v203=1;end if (v203==1) then v206=v92[3];for v461=1,v206 do v205[v461]=v90[v204 + v461 ];end break;end end else v90[v92[2]]=v90[v92[3]] + v92[4] ;end elseif (v93>19) then local v208=0;local v209;local v210;local v211;while true do if (v208==2) then if (v210>(0 -0)) then if (v211<=v90[v209 + 1 ]) then local v527=0;while true do if (v527==0) then v84=v92[3];v90[v209 + 3 ]=v211;break;end end end elseif (v211>=v90[v209 + 1 ]) then local v528=0;while true do if (v528==0) then v84=v92[17 -(9 + 5) ];v90[v209 + (379 -(85 + 291)) ]=v211;break;end end end break;end if (0==v208) then v209=v92[2];v210=v90[v209 + 1 + 1 ];v208=1;end if (v208==1) then v211=v90[v209] + v210 ;v90[v209]=v211;v208=2;end end else local v212=v92[2];local v213={v90[v212](v90[v212 + 1 ])};local v214=0 -0 ;for v359=v212,v92[4] do local v360=0;while true do if (v360==0) then v214=v214 + 1 ;v90[v359]=v213[v214];break;end end end end elseif (v93<=(54 -31)) then if (v93<=21) then local v140=v92[2];do return v21(v90,v140,v85);end elseif (v93==22) then if (v90[v92[2]]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end else v90[v92[2]][v92[3]]=v90[v92[4]];end elseif (v93<=25) then if (v93==24) then local v217=v92[2 + 0 ];v90[v217](v21(v90,v217 + 1 ,v85));elseif (v90[v92[2]]<=v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>26) then v90[v92[2]]={};else v90[v92[1182 -(1123 + 57) ]][v90[v92[5 -2 ]]]=v92[4];end elseif (v93<=41) then if (v93<=(62 -28)) then if (v93<=30) then if (v93<=28) then local v141=v92[2];local v142=v90[v141];for v167=v141 + 1 ,v85 do v15(v142,v90[v167]);end elseif (v93>29) then v90[v92[2 + 0 ]]=v73[v92[3]];else v90[v92[2]]=v90[v92[3]]%v90[v92[4]] ;end elseif (v93<=32) then if (v93>31) then local v224=v92[2];local v225,v226=v83(v90[v224](v21(v90,v224 + (255 -(163 + 91)) ,v85)));v85=(v226 + v224) -1 ;local v227=350 -(87 + 263) ;for v361=v224,v85 do v227=v227 + 1 ;v90[v361]=v225[v227];end else v90[v92[2]][v92[1933 -(1869 + 61) ]]=v90[v92[4]];end elseif (v93>(213 -(67 + 113))) then do return;end else local v230=v92[2 + 0 ];local v231={v90[v230](v21(v90,v230 + 1 ,v85))};local v232=0;for v364=v230,v92[4] do local v365=0;while true do if (0==v365) then v232=v232 + 1 ;v90[v364]=v231[v232];break;end end end end elseif (v93<=37) then if (v93<=35) then do return v90[v92[2]];end elseif (v93>36) then if (v92[2]<v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end else local v233=0;local v234;while true do if (0==v233) then v234=v92[2];v90[v234]=v90[v234](v90[v234 + 1 ]);break;end end end elseif (v93<=(11 + 28)) then if (v93==38) then v90[v92[2]]=v92[3];else local v237=0;local v238;while true do if (v237==0) then v238=v92[2];do return v90[v238](v21(v90,v238 + 1 ,v92[3]));end break;end end end elseif (v93==40) then local v239=0;local v240;local v241;local v242;while true do if (v239==2) then for v468=1,v92[14 -10 ] do v84=v84 + (1 -0) ;local v469=v80[v84];if (v469[1]==57) then v242[v468-1 ]={v90,v469[1 + 2 ]};else v242[v468-1 ]={v73,v469[3]};end v89[ #v89 + 1 + 0 ]=v242;end v90[v92[7 -5 ]]=v40(v240,v241,v74);break;end if (v239==0) then v240=v81[v92[3]];v241=nil;v239=1;end if (v239==1) then v242={};v241=v18({},{[v7("\17\99\38\195\132\40\201","\177\78\60\79\173\224\77")]=function(v471,v472) local v473=v242[v472];return v473[1][v473[2]];end,[v7("\212\121\193\78\57\141\81\239\67\215","\63\139\38\175\43\78\228")]=function(v474,v475,v476) local v477=0;local v478;while true do if (v477==0) then v478=v242[v475];v478[1][v478[2]]=v476;break;end end end});v239=2;end end else v84=v92[955 -(802 + 150) ];end elseif (v93<=(65 -17)) then if (v93<=44) then if (v93<=42) then v90[v92[2]]=v90[v92[3]][v92[4]];elseif (v93==43) then v90[v92[2]][v90[v92[7 -4 ]]]=v92[4];else v90[v92[2]]=v90[v92[3]] + v92[4] ;end elseif (v93<=46) then if (v93==(81 -36)) then local v247=0;local v248;while true do if (v247==0) then v248=v92[2 + 0 ];do return v21(v90,v248,v85);end break;end end else local v249=0;local v250;while true do if (v249==0) then v250=v92[999 -(915 + 82) ];v90[v250](v90[v250 + 1 ]);break;end end end elseif (v93>47) then v90[v92[2]]= #v90[v92[3]];else local v252=0;local v253;local v254;local v255;local v256;while true do if (v252==2) then for v479=v253,v85 do local v480=0;while true do if (v480==0) then v256=v256 + 1 ;v90[v479]=v254[v256];break;end end end break;end if (v252==0) then v253=v92[2];v254,v255=v83(v90[v253](v90[v253 + 1 ]));v252=1;end if (v252==1) then v85=(v255 + v253) -1 ;v256=0;v252=2;end end end elseif (v93<=(144 -93)) then if (v93<=49) then v90[v92[2]][v90[v92[3]]]=v90[v92[4]];elseif (v93>50) then v90[v92[2]]=v92[2 + 1 ]~=(1474 -(1329 + 145)) ;else v90[v92[2]]=v90[v92[3]]%v92[975 -(140 + 831) ] ;end elseif (v93<=53) then if (v93==52) then local v259=v92[2];local v260,v261=v83(v90[v259](v90[v259 + 1 ]));v85=(v261 + v259) -1 ;local v262=0 -0 ;for v366=v259,v85 do local v367=0;while true do if (v367==0) then v262=v262 + 1 ;v90[v366]=v260[v262];break;end end end else v90[v92[2]][v90[v92[3]]]=v90[v92[4]];end elseif (v93==54) then local v265=v81[v92[3]];local v266;local v267={};v266=v18({},{[v7("\61\186\199\86\6\128\214","\56\98\229\174")]=function(v368,v369) local v370=0;local v371;while true do if (v370==0) then v371=v267[v369];return v371[1188 -(1069 + 118) ][v371[2]];end end end,[v7("\60\226\55\183\20\212\55\182\6\197","\210\99\189\89")]=function(v372,v373,v374) local v375=0;local v376;while true do if (v375==0) then v376=v267[v373];v376[2 -1 ][v376[2]]=v374;break;end end end});for v377=1,v92[4] do local v378=0;local v379;while true do if (v378==1) then if (v379[1]==(775 -(15 + 703))) then v267[v377-1 ]={v90,v379[6 -3 ]};else v267[v377-(1 + 0) ]={v73,v379[3 + 0 ]};end v89[ #v89 + 1 ]=v267;break;end if (v378==0) then v84=v84 + 1 ;v379=v80[v84];v378=1;end end end v90[v92[2]]=v40(v265,v266,v74);elseif (v92[2]<v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=83) then if (v93<=69) then if (v93<=62) then if (v93<=(849 -(368 + 423))) then if (v93<=56) then v90[v92[2]]=v92[3]~=0 ;elseif (v93>57) then v90[v92[1 + 1 ]]=v73[v92[3]];else v90[v92[2]]=v90[v92[3]];end elseif (v93<=60) then if (v93>59) then do return v90[v92[2]]();end else local v273=0;local v274;local v275;while true do if (v273==1) then for v488=v274 + (439 -(262 + 176)) ,v85 do v15(v275,v90[v488]);end break;end if (v273==0) then v274=v92[2];v275=v90[v274];v273=1;end end end elseif (v93==61) then v90[v92[2]]=v40(v81[v92[3]],nil,v74);else v90[v92[2]]=v74[v92[1724 -(345 + 1376) ]];end elseif (v93<=(204 -139)) then if (v93<=(751 -(198 + 490))) then local v148=v92[8 -6 ];local v149,v150=v83(v90[v148](v21(v90,v148 + (19 -(10 + 8)) ,v85)));v85=(v150 + v148) -1 ;local v151=0;for v168=v148,v85 do v151=v151 + 1 ;v90[v168]=v149[v151];end elseif (v93>64) then local v279=v92[2];do return v90[v279](v21(v90,v279 + 1 ,v92[3]));end else local v280=0;local v281;while true do if (v280==0) then v281=v92[7 -5 ];v90[v281](v21(v90,v281 + 1 ,v92[3]));break;end end end elseif (v93<=67) then if (v93==66) then local v282=0;local v283;while true do if (v282==0) then v283=v92[2];v90[v283](v21(v90,v283 + 1 ,v85));break;end end else local v284=v92[444 -(416 + 26) ];v90[v284]=v90[v284](v90[v284 + 1 ]);end elseif (v93>68) then local v286=0;local v287;local v288;while true do if (v286==1) then for v489=1, #v89 do local v490=0;local v491;while true do if (v490==0) then v491=v89[v489];for v540=0, #v491 do local v541=v491[v540];local v542=v541[2 -1 ];local v543=v541[2];if ((v542==v90) and (v543>=v287)) then local v551=0;while true do if (0==v551) then v288[v543]=v542[v543];v541[1]=v288;break;end end end end break;end end end break;end if (v286==0) then v287=v92[2];v288={};v286=1;end end else v90[v92[2]]=v90[v92[1209 -(696 + 510) ]][v92[4]];end elseif (v93<=(242 -166)) then if (v93<=72) then if (v93<=70) then local v152=v92[1 + 1 ];v90[v152]=v90[v152]();elseif (v93>71) then if  not v90[v92[2]] then v84=v84 + (1 -0) ;else v84=v92[3];end else v90[v92[2]]=v90[v92[3]]%v92[1266 -(1091 + 171) ] ;end elseif (v93<=74) then if (v93>73) then local v292=0;local v293;while true do if (v292==0) then v293=v92[2];v90[v293](v90[v293 + 1 ]);break;end end else local v294=0;local v295;while true do if (0==v294) then v295=v92[2];v90[v295]=v90[v295](v21(v90,v295 + 1 ,v92[3]));break;end end end elseif (v93==75) then for v380=v92[2],v92[3] do v90[v380]=nil;end else v90[v92[2]]=v92[3];end elseif (v93<=79) then if (v93<=(136 -59)) then v90[v92[2]]= #v90[v92[3]];elseif (v93==78) then if v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else do return;end end elseif (v93<=81) then if (v93==80) then local v298=0;local v299;while true do if (v298==0) then v299=v92[2];v90[v299]=v90[v299](v21(v90,v299 + 1 + 0 ,v92[3]));break;end end elseif v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>82) then local v300=0;local v301;while true do if (v300==0) then v301=v90[v92[4]];if  not v301 then v84=v84 + (3 -2) ;else v90[v92[2]]=v301;v84=v92[3];end break;end end else v90[v92[2]]=v90[v92[3]]%v90[v92[4]] ;end elseif (v93<=97) then if (v93<=90) then if (v93<=86) then if (v93<=(278 -194)) then local v155=0;local v156;local v157;while true do if (v155==0) then v156=v92[3];v157=v90[v156];v155=1;end if (1==v155) then for v400=v156 + 1 ,v92[4] do v157=v157   .. v90[v400] ;end v90[v92[2]]=v157;break;end end elseif (v93>85) then local v303=v92[2];local v304={v90[v303](v90[v303 + 1 ])};local v305=0;for v385=v303,v92[378 -(123 + 251) ] do v305=v305 + 1 ;v90[v385]=v304[v305];end else local v306=v92[2];local v307=v92[4];local v308=v306 + 2 ;local v309={v90[v306](v90[v306 + (439 -(145 + 293)) ],v90[v308])};for v388=1,v307 do v90[v308 + v388 ]=v309[v388];end local v310=v309[1];if v310 then v90[v308]=v310;v84=v92[3];else v84=v84 + 1 ;end end elseif (v93<=88) then if (v93>(432 -345)) then if (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end else local v311=0;local v312;local v313;local v314;local v315;while true do if (0==v311) then v312=v92[2];v313,v314=v83(v90[v312](v21(v90,v312 + (431 -(44 + 386)) ,v92[1489 -(998 + 488) ])));v311=1;end if (v311==2) then for v492=v312,v85 do local v493=0;while true do if (v493==0) then v315=v315 + 1 ;v90[v492]=v313[v315];break;end end end break;end if (v311==1) then v85=(v314 + v312) -1 ;v315=0;v311=2;end end end elseif (v93>(787 -(208 + 490))) then local v316=v92[1 + 1 ];v90[v316](v21(v90,v316 + 1 ,v92[3]));else local v317=0;local v318;local v319;local v320;local v321;while true do if (v317==2) then for v494=v318,v320 do local v495=0;while true do if (v495==0) then v321=v321 + 1 ;v90[v494]=v319[v321];break;end end end break;end if (v317==1) then v320=v92[4];v321=0;v317=2;end if (v317==0) then v318=v92[2];v319={v90[v318]()};v317=1;end end end elseif (v93<=93) then if (v93<=91) then v90[v92[2]]();elseif (v93==92) then if (v90[v92[2]]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[1 + 2 ];end else local v322=0;local v323;local v324;while true do if (v322==1) then for v496=v323 + 1 ,v92[4] do v324=v324   .. v90[v496] ;end v90[v92[2]]=v324;break;end if (0==v322) then v323=v92[3];v324=v90[v323];v322=1;end end end elseif (v93<=95) then if (v93>94) then local v325=0;local v326;local v327;local v328;while true do if (v325==0) then v326=v92[2];v327={v90[v326](v21(v90,v326 + 1 ,v85))};v325=1;end if (v325==1) then v328=0;for v497=v326,v92[2 + 2 ] do local v498=0;while true do if (0==v498) then v328=v328 + 1 ;v90[v497]=v327[v328];break;end end end break;end end else v90[v92[2]]();end elseif (v93==96) then if  not v90[v92[2]] then v84=v84 + (837 -(660 + 176)) ;else v84=v92[3];end elseif (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=(13 + 91)) then if (v93<=100) then if (v93<=98) then local v158=v92[2];local v159=v90[v92[3]];v90[v158 + 1 ]=v159;v90[v158]=v159[v92[206 -(14 + 188) ]];elseif (v93==99) then if (v90[v92[2]]<=v90[v92[4 + 0 ]]) then v84=v84 + 1 ;else v84=v92[3];end else do return v90[v92[2]]();end end elseif (v93<=102) then if (v93==101) then local v329=v92[2];local v330=v90[v329];local v331=v90[v329 + 2 ];if (v331>0) then if (v330>v90[v329 + 1 ]) then v84=v92[3];else v90[v329 + 3 ]=v330;end elseif (v330<v90[v329 + 1 ]) then v84=v92[3];else v90[v329 + 3 ]=v330;end else v84=v92[3];end elseif (v93==103) then if (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end else local v333=0;local v334;while true do if (0==v333) then v334=v92[2];do return v21(v90,v334,v334 + v92[3] );end break;end end end elseif (v93<=108) then if (v93<=106) then if (v93==105) then do return v90[v92[2]];end else local v335=0;local v336;while true do if (v335==0) then v336=v92[2];v90[v336]=v90[v336]();break;end end end elseif (v93>107) then local v337=0;local v338;local v339;local v340;local v341;while true do if (v337==2) then for v503=v338,v85 do v341=v341 + 1 ;v90[v503]=v339[v341];end break;end if (v337==0) then v338=v92[677 -(534 + 141) ];v339,v340=v83(v90[v338](v21(v90,v338 + 1 ,v92[775 -(201 + 571) ])));v337=1;end if (v337==1) then v85=(v340 + v338) -1 ;v341=1138 -(116 + 1022) ;v337=2;end end else v90[v92[2]]=v74[v92[3]];end elseif (v93<=110) then if (v93==109) then v90[v92[2]]=v92[12 -9 ] + v90[v92[4]] ;else v90[v92[2 + 0 ]]=v40(v81[v92[3]],nil,v74);end elseif (v93==111) then local v346=v92[2 + 0 ];local v347=v90[v346 + (7 -5) ];local v348=v90[v346] + v347 ;v90[v346]=v348;if (v347>0) then if (v348<=v90[v346 + 1 ]) then v84=v92[3];v90[v346 + (10 -7) ]=v348;end elseif (v348>=v90[v346 + 1 ]) then v84=v92[3];v90[v346 + 3 + 0 ]=v348;end else local v350=0;local v351;while true do if (v350==0) then v351=v92[861 -(814 + 45) ];v90[v351]=v90[v351](v21(v90,v351 + 1 ,v85));break;end end end v84=v84 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--
